---
- name: DC/OS Requirements
  hosts: all
  tasks:
    - include_role:
        name: dcos_requirements
- name: Set open checksum and url
  hosts: localhost
  tasks:
  - name: OSS DC/OS
    set_fact:
      test_initial_download: "https://downloads.dcos.io/dcos/testing/2.1.0-beta4/commit/24132bebea79dc1f75dfa295be4542020e8bae11/dcos_generate_config.sh"
      test_initial_download_checksum: ""
      test_initial_commit: "24132bebea79dc1f75dfa295be4542020e8bae11"
      test_initial_version: "2.1.0-beta4"
      test_initial_download_win: "https://downloads.dcos.io/dcos/testing/2.1.0-beta4/commit/24132bebea79dc1f75dfa295be4542020e8bae11/windows/dcos_generate_config_win.sh"
      test_upgrade_download: "https://downloads.dcos.io/dcos/testing/pull/7208/commit/85e22b89846026044aa82cac86037e669cc61384/dcos_generate_config.sh"
      test_upgrade_download_checksum: ""
      test_upgrade_commit: "85e22b89846026044aa82cac86037e669cc61384"
      test_upgrade_version: "2.1.0-dev"
      test_upgrade_download_win: "https://downloads.dcos.io/dcos/testing/pull/7208/commit/85e22b89846026044aa82cac86037e669cc61384/windows/dcos_generate_config_win.sh"
    when: not dcos['enterprise_dcos']
  - name: EE DC/OS
    set_fact:
      test_initial_download: "https://downloads.mesosphere.com/dcos-enterprise/testing/2.1.0-beta4/commit/1179b61542093274c2578a5e4a074a751bcbbb1a/dcos_generate_config.ee.sh"
      test_initial_download_checksum: ""
      test_initial_commit: "1179b61542093274c2578a5e4a074a751bcbbb1a"
      test_initial_version: "2.1.0-beta4"
      test_initial_download_win: "https://downloads.mesosphere.com/dcos-enterprise/testing/2.1.0-beta4/commit/1179b61542093274c2578a5e4a074a751bcbbb1a/windows/dcos_generate_config_win.ee.sh"
      test_upgrade_download: "https://downloads.mesosphere.com/dcos-enterprise/testing/pull/7753/commit/a609ce84d5b4b7224e4df9c57ea6d1aee395d1d4/dcos_generate_config.ee.sh"
      test_upgrade_download_checksum: ""
      test_upgrade_commit: "a609ce84d5b4b7224e4df9c57ea6d1aee395d1d4"
      test_upgrade_version: "2.1.0-dev"
      test_upgrade_download_win: "https://downloads.mesosphere.com/dcos-enterprise/testing/pull/7753/commit/a609ce84d5b4b7224e4df9c57ea6d1aee395d1d4/windows/dcos_generate_config_win.ee.sh"
    when: dcos['enterprise_dcos']


- name: "Setup and configure BOOTSTRAP nodes"
  hosts: bootstraps
  become: true
  tasks:
    - include_role:
        name: dcos_bootstrap
  vars:
    dcos:
      download: "{{ hostvars['localhost'].test_initial_download }}"
      download_checksum: "{{ hostvars['localhost'].test_initial_download_checksum }}"
      download_win: "{{ hostvars['localhost'].test_initial_download_win }}"
      version: "{{ hostvars['localhost'].test_initial_version }}"
      image_commit: "{{ hostvars['localhost'].test_initial_commit }}"
      config:
        bootstrap_url: "http://{{ hostvars[groups['bootstraps'][0]].ansible_facts.default_ipv4.address }}:8080"
        master_list: ["{{ hostvars[groups['masters'][0]].ansible_facts.default_ipv4.address }}"]
        enable_windows_agents: true

- name: "Setup and configure MASTER nodes"
  hosts: masters
  serial: 1
  become: true
  tasks:
    - include_role:
        name: dcos_master
  vars:
    dcos:
      download: "{{ hostvars['localhost'].test_initial_download }}"
      download_checksum: "{{ hostvars['localhost'].test_initial_download_checksum }}"
      version: "{{ hostvars['localhost'].test_initial_version }}"
      image_commit: "{{ hostvars['localhost'].test_initial_commit }}"
      config:
        bootstrap_url: "http://{{ hostvars[groups['bootstraps'][0]].ansible_facts.default_ipv4.address }}:8080"
        master_list: ["{{ hostvars[groups['masters'][0]].ansible_facts.default_ipv4.address }}"]

- name: "Setup and configure AGENT nodes"
  hosts: agents
  tasks:
    - include_role:
        name: dcos_agent
  vars:
    dcos:
      download: "{{ hostvars['localhost'].test_initial_download }}"
      download_checksum: "{{ hostvars['localhost'].test_initial_download_checksum }}"
      download_win: "{{ hostvars['localhost'].test_initial_download_win }}"
      version: "{{ hostvars['localhost'].test_initial_version }}"
      image_commit: "{{ hostvars['localhost'].test_initial_commit }}"
      config:
        bootstrap_url: "http://{{ hostvars[groups['bootstraps'][0]].ansible_facts.default_ipv4.address }}:8080"
        master_list: ["{{ hostvars[groups['masters'][0]].ansible_facts.default_ipv4.address }}"]
        enable_windows_agents: true

- name: "WAIT for the cluster to stabilise before upgrade"
  hosts: localhost
  tasks:
    - name: WAIT for the cluster to stabilise before upgrade
      pause:
        minutes: 1

- name: Collect DC/OS versions
  hosts: all
  tasks:
    - name: Collect DC/OS versions
      setup:

- name: "Upgrade and configure BOOTSTRAP nodes"
  hosts: bootstraps
  become: true
  tasks:
    - include_role:
        name: dcos_bootstrap
  vars:
    dcos:
      download: "{{ hostvars['localhost'].test_upgrade_download }}"
      download_checksum: "{{ hostvars['localhost'].test_upgrade_download_checksum }}"
      download_win: "{{ hostvars['localhost'].test_upgrade_download_win }}"
      version: "{{ hostvars['localhost'].test_upgrade_version }}"
      image_commit: "{{ hostvars['localhost'].test_upgrade_commit }}"
      config:
        bootstrap_url: "http://{{ hostvars[groups['bootstraps'][0]].ansible_facts.default_ipv4.address }}:8080"
        master_list: ["{{ hostvars[groups['masters'][0]].ansible_facts.default_ipv4.address }}"]
        enable_windows_agents: true

- name: "Upgrade and configure MASTER nodes"
  hosts: masters
  serial: 1
  become: true
  tasks:
    - include_role:
        name: dcos_master
  vars:
    dcos:
      download: "{{ hostvars['localhost'].test_upgrade_download }}"
      download_checksum: "{{ hostvars['localhost'].test_upgrade_download_checksum }}"
      download_win: "{{ hostvars['localhost'].test_upgrade_download_win }}"
      version: "{{ hostvars['localhost'].test_upgrade_version }}"
      image_commit: "{{ hostvars['localhost'].test_upgrade_commit }}"
      config:
        bootstrap_url: "http://{{ hostvars[groups['bootstraps'][0]].ansible_facts.default_ipv4.address }}:8080"
        master_list: ["{{ hostvars[groups['masters'][0]].ansible_facts.default_ipv4.address }}"]
        enable_windows_agents: true

- name: "Upgrade and configure AGENT nodes"
  hosts: agents:!agents_windows
  tasks:
    - include_role:
        name: dcos_agent
  vars:
    dcos:
      download: "{{ hostvars['localhost'].test_upgrade_download }}"
      download_checksum: "{{ hostvars['localhost'].test_upgrade_download_checksum }}"
      download_win: "{{ hostvars['localhost'].test_upgrade_download_win }}"
      version: "{{ hostvars['localhost'].test_upgrade_version }}"
      image_commit: "{{ hostvars['localhost'].test_upgrade_commit }}"
      config:
        bootstrap_url: "http://{{ hostvars[groups['bootstraps'][0]].ansible_facts.default_ipv4.address }}:8080"
        master_list: ["{{ hostvars[groups['masters'][0]].ansible_facts.default_ipv4.address }}"]
        enable_windows_agents: true
