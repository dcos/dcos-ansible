---
- name: Windows | Create custom fact directory
  win_file:
    path: "{{ base_windows_dir }}\\etc\\ansible\\facts.d"
    state: directory

- name: Windows | Check for previous intallations
  win_stat:
    path: '{{ base_windows_dir }}\etc\dcos-version.json'
  register: previous_installation

- name: Windows | Create dcos_installation.fact.ps1
  win_copy:
    content: get-content {{ base_windows_dir }}\\etc\\dcos-version.json -Raw | ConvertFrom-Json
    dest: "{{ base_windows_dir }}\\etc\\ansible\\facts.d\\dcos_installation.fact.ps1"
  when: previous_installation.stat.exists and previous_installation.stat.isreg
  notify: reload facts
- name: Windows | Re-run setup to use custom facts
  setup:
    fact_path: "{{ base_windows_dir }}\\etc\\ansible\\facts.d\\dcos_installation.fact.ps1"
  when: previous_installation.stat.exists and previous_installation.stat.isreg
  notify: reload facts
- meta: flush_handlers

# TO DO: remove when Winpanda is able to create Mesos-DNS by its own
- name: Windows | Detect network interface with default_gateway set
  set_fact:
    default_network_interface: "{{ item.connection_name }}"
  when: item.default_gateway is defined and item.default_gateway
  with_items: "{{ ansible_interfaces }}"
  register: default_network_interface_detect
  changed_when: false

- name: Windows | Configures DNS lookup on Windows hosts
  win_dns_client:
    adapter_names: "{{ item.ansible_facts.default_network_interface }}"
    ipv4_addresses: "{{ groups['masters'] | map('extract', hostvars, ['dcos_custom_facts', 'detect_ip']) | list }}"
    log_path: C:\dns_log.txt
  when: item.ansible_facts is defined
  with_items: "{{ default_network_interface_detect.results }}"

# Installation for fresh nodes
- import_tasks: dcos_install-Windows.yml
  when: ( hostvars[inventory_hostname]['ansible_dcos_installation'] is not defined ) or ( hostvars[inventory_hostname]['ansible_dcos_installation']['dcos-image-commit'] is not defined )

#Upgrade nodes
- import_tasks: dcos_upgrade-Windows.yml
  when:
    - hostvars[inventory_hostname]['ansible_dcos_installation'] is defined
    - (dcos['image_commit'] is defined and hostvars[inventory_hostname]['ansible_dcos_installation']['dcos-image-commit'] != dcos['image_commit']) or (dcos['image_commit'] is not defined and hostvars[inventory_hostname]['ansible_dcos_installation']['version'] != dcos['version']) # or latest_dcos_config_setup_is_installed.rc != 0
    #- ((hostvars[inventory_hostname]['ansible_dcos_installation']['version'] is defined) and (hostvars[inventory_hostname]['ansible_dcos_installation']['version'] != dcos['version'])) or ( ( hostvars[inventory_hostname]['ansible_dcos_installation']['dcos-image-commit'] is defined) and (hostvars[inventory_hostname]['ansible_dcos_installation']['dcos-image-commit'] != dcos['image_commit']))
